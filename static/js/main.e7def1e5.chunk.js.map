{"version":3,"sources":["api/fetchWeather.js","useGeolocalisation.js","App.js","index.js"],"names":["fetchWeather","query","a","axios","get","params","q","units","APPID","data","useGeolocalisation","useState","loaded","coordinates","lat","lng","location","setLocation","onSuccces","coords","latitude","longitude","onError","error","useEffect","navigator","code","message","state","geolocation","getCurrentPosition","App","setQuery","weather","setWeather","geoLocation","search","e","key","className","JSON","stringify","type","placeholder","value","onChange","target","onKeyPress","main","name","sys","country","Math","round","temp","src","icon","alt","description","ReactDOM","render","document","getElementById"],"mappings":"uQAKaA,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACDC,IAAMC,IAJrB,kDAI8B,CAClCC,OAAQ,CACJC,EAAGL,EACHM,MAAO,SACPC,MAPI,sCAEY,uBAChBC,EADgB,EAChBA,KADgB,kBASjBA,GATiB,2CAAH,sD,eCmDVC,EAvDY,WAAM,MAEEC,mBAAS,CACpCC,QAAO,EACPC,YAAc,CAACC,IAAI,GAAGC,IAAI,MAJD,mBAEtBC,EAFsB,KAEbC,EAFa,KASvBC,EAAY,SAAAF,GACdC,EAAY,CACRL,QAAQ,EACRC,YAAc,CACVC,IAAIE,EAASG,OAAOC,SACpBL,IAAIC,EAASG,OAAOE,cAI1BC,EAAU,SAAAC,GACZN,EAAY,CACPL,QAAO,EACRW,WA6BR,OAxBIC,qBAAU,WAED,gBAAiBC,YAClBH,EAAQ,CACJI,KAAK,EACLC,QAAQ,4BAEbV,GAAY,SAACW,GAAD,mBAAC,eACNA,GADK,IAERhB,QAAQ,EACRW,MAAM,CACFG,KAAO,EACPC,QAAU,sCAOrBF,UAAUI,YAAYC,mBAAmBZ,EAAUI,KACrD,IAICN,GCHIe,EAxCH,WAAO,IAAD,EACYpB,mBAAS,IADrB,mBACPV,EADO,KACA+B,EADA,OAEgBrB,mBAAS,IAFzB,mBAEPsB,EAFO,KAEEC,EAFF,KAIVC,EAAczB,IACZ0B,EAAM,uCAAG,WAAOC,GAAP,eAAAnC,EAAA,yDACE,UAAVmC,EAAEC,IADM,gCAEYtC,EAAaC,GAFzB,OAEDQ,EAFC,OAIPyB,EAAWzB,GACXuB,EAAS,IALF,2CAAH,sDASZ,OACI,yBAAKO,UAAU,kBAEX,yBAAKA,UAAU,WAAWJ,EAAYvB,OAAQ4B,KAAKC,UAAUN,GAAa,WAC1E,2BAAOO,KAAK,OAAMH,UAAU,SAAQI,YAAY,YAAWC,MAAO3C,EAAM4C,SAAU,SAACR,GAAD,OAAOL,EAASK,EAAES,OAAOF,QAAOG,WAAYX,IAC7HH,EAAQe,MACL,yBAAKT,UAAU,QACX,wBAAIA,UAAU,aACV,8BAAON,EAAQgB,MACf,6BAAMhB,EAAQiB,IAAIC,UAEtB,yBAAKZ,UAAU,aACVa,KAAKC,MAAMpB,EAAQe,KAAKM,MACzB,uCAEJ,yBAAKf,UAAU,QACX,yBAAKA,UAAU,YAAYgB,IAAG,4CAAuCtB,EAAQA,QAAQ,GAAGuB,KAA1D,WAAyEC,IAAKxB,EAAQA,QAAQ,GAAGyB,cAC/H,2BAAIzB,EAAQA,QAAQ,GAAGyB,iBClC/CC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e7def1e5.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\r\nconst API_KEY = 'f33a484cf794d08d0148764789aaba32';\r\n\r\nexport const fetchWeather = async (query) => {\r\n    const { data } = await axios.get(URL, {\r\n        params: {\r\n            q: query,\r\n            units: 'metric',\r\n            APPID: API_KEY,\r\n        }\r\n    });\r\n\r\n    return data;\r\n}","import React,{useState,useEffect} from 'react'\r\nconst useGeolocalisation = () => {\r\n    // HNA STATE PAR DEFAULT KAYAKHUD F LOADED FALSE  u latitude u longitude kayakun Khawi\r\n    const [location,setLocation] = useState({\r\n        loaded:false,\r\n        coordinates : {lat:\"\",lng:\"\"}\r\n    })\r\n    // had fuction fash Kayw9e3 DEK Event \r\n    // fash katch3li Location katlu7i loaded=>True u lat: location.coords.latitude   lng: location.coords.longitude\r\n    // \r\n    const onSuccces = location =>{\r\n        setLocation({\r\n            loaded: true,\r\n            coordinates : {\r\n                lat:location.coords.latitude,\r\n                lng:location.coords.longitude,\r\n        }})  \r\n    }\r\n    // Hna F error Katdawzi ldek Exepction tchufi chnu fiha\r\n    const onError = error =>{\r\n        setLocation({\r\n             loaded:true,\r\n            error}\r\n           \r\n        )\r\n    }\r\n// fash ikun Component f load ula kaytbadal state\r\n        useEffect(()=>{\r\n            // hna 3la wed CompabilitÃ© dial les navigator ila kan support dialha makhdmach\r\n            if(!(\"geolocation\" in navigator)){\r\n                onError({\r\n                    code:0,\r\n                    message:\"Geolocation Not support\"\r\n                })\r\n               setLocation((state)=>({\r\n                   ...state,\r\n                   loaded: true,\r\n                   error:{\r\n                       code : 0,\r\n                       message : \"Geoloacalisation Not Support\"\r\n                   }\r\n               }))\r\n            }\r\n            // hada huwa film lhindi fash kaykun nav fih geolocation jib liya CurrentPosition getCurrentPosition \r\n            // u ndawzu lih 2 params lawal dial sucess li dayaz fih dek location latitude longitude\r\n            // u params 2 fash kayw9e3 error kayraja3 lik chnahuwa dek eror\r\n            navigator.geolocation.getCurrentPosition(onSuccces,onError);\r\n        },[])\r\n\r\n\r\n\r\n    return location\r\n\r\n\r\n}\r\n\r\nexport default useGeolocalisation\r\n","import React, { useState } from 'react';\r\n\r\nimport { fetchWeather } from './api/fetchWeather';\r\nimport './App.css';\r\n\r\n// kanjibu dek component li sawablna kayjib lik Geolocalisation \r\nimport useGeolocalisation from './useGeolocalisation';\r\n\r\nconst App = () => {\r\n    const [query, setQuery] = useState('');\r\n    const [weather, setWeather] = useState({});\r\n    // hna dekchi li jayab mn component Ghadi N7atu f const ula variable li 7biti\r\n    let geoLocation = useGeolocalisation();\r\n    const search = async (e) => {\r\n        if(e.key === 'Enter') {\r\n            const data = await fetchWeather(query);\r\n\r\n            setWeather(data);\r\n            setQuery('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-container\">\r\n            {/*******  hnaya fin kaynfe3 loaded ila kan true kayaficher kiya dek objet li jay sinon DIk dededededede li chfti 9bayla HAHAHAHAHHAH*/}\r\n            <div className=\"GeoInfo\">{geoLocation.loaded? JSON.stringify(geoLocation):\"dededed\"}</div>\r\n            <input type=\"text\"className=\"search\"placeholder=\"Search...\"value={query}onChange={(e) => setQuery(e.target.value)}onKeyPress={search}/>\r\n            {weather.main && (\r\n                <div className=\"city\">\r\n                    <h2 className=\"city-name\">\r\n                        <span>{weather.name}</span>\r\n                        <sup>{weather.sys.country}</sup>\r\n                    </h2>\r\n                    <div className=\"city-temp\">\r\n                        {Math.round(weather.main.temp)}\r\n                        <sup>&deg;C</sup>\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <img className=\"city-icon\" src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description} />\r\n                        <p>{weather.weather[0].description}</p>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}